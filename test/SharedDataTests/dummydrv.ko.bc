; ModuleID = 'dummydrv.ko.c'
source_filename = "dummydrv.ko.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-linux-gnu"

%struct.data = type { i32*, i32 }

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @main() #0 !dbg !7 {
  %1 = alloca i32, align 4
  %2 = alloca %struct.data, align 8
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca [10 x i32], align 16
  store i32 0, i32* %1, align 4
  call void @llvm.dbg.declare(metadata %struct.data* %2, metadata !11, metadata !DIExpression()), !dbg !18
  call void @llvm.dbg.declare(metadata i32* %3, metadata !19, metadata !DIExpression()), !dbg !20
  store i32 10, i32* %3, align 4, !dbg !20
  %6 = getelementptr inbounds %struct.data, %struct.data* %2, i32 0, i32 0, !dbg !21
  store i32* %3, i32** %6, align 8, !dbg !22
  %7 = call i32 (%struct.data*, ...) bitcast (i32 (...)* @dereference_ptr to i32 (%struct.data*, ...)*)(%struct.data* %2), !dbg !23
  %8 = getelementptr inbounds %struct.data, %struct.data* %2, i32 0, i32 1, !dbg !24
  store i32 100, i32* %8, align 8, !dbg !25
  %9 = call i32 (%struct.data*, ...) bitcast (i32 (...)* @controlled_malloc to i32 (%struct.data*, ...)*)(%struct.data* %2), !dbg !26
  call void @llvm.dbg.declare(metadata i32* %4, metadata !27, metadata !DIExpression()), !dbg !28
  store i32 20, i32* %4, align 4, !dbg !28
  %10 = getelementptr inbounds %struct.data, %struct.data* %2, i32 0, i32 0, !dbg !29
  store i32* %4, i32** %10, align 8, !dbg !30
  %11 = call i32 (%struct.data*, ...) bitcast (i32 (...)* @free_ptr to i32 (%struct.data*, ...)*)(%struct.data* %2), !dbg !31
  %12 = getelementptr inbounds %struct.data, %struct.data* %2, i32 0, i32 0, !dbg !32
  store i32* %3, i32** %12, align 8, !dbg !33
  %13 = call i32 (%struct.data*, ...) bitcast (i32 (...)* @pointer_arithmetic to i32 (%struct.data*, ...)*)(%struct.data* %2), !dbg !34
  %14 = getelementptr inbounds %struct.data, %struct.data* %2, i32 0, i32 1, !dbg !35
  store i32 15, i32* %14, align 8, !dbg !36
  %15 = call i32 (%struct.data*, ...) bitcast (i32 (...)* @sensitive_branch to i32 (%struct.data*, ...)*)(%struct.data* %2), !dbg !37
  call void @llvm.dbg.declare(metadata [10 x i32]* %5, metadata !38, metadata !DIExpression()), !dbg !42
  %16 = getelementptr inbounds %struct.data, %struct.data* %2, i32 0, i32 1, !dbg !43
  store i32 5, i32* %16, align 8, !dbg !44
  %17 = getelementptr inbounds [10 x i32], [10 x i32]* %5, i64 0, i64 0, !dbg !45
  %18 = call i32 (i32*, %struct.data*, ...) bitcast (i32 (...)* @array_indexing to i32 (i32*, %struct.data*, ...)*)(i32* %17, %struct.data* %2), !dbg !46
  ret i32 0, !dbg !47
}

; Function Attrs: nounwind readnone speculatable willreturn
declare void @llvm.dbg.declare(metadata, metadata, metadata) #1

declare dso_local i32 @dereference_ptr(...) #2

declare dso_local i32 @controlled_malloc(...) #2

declare dso_local i32 @free_ptr(...) #2

declare dso_local i32 @pointer_arithmetic(...) #2

declare dso_local i32 @sensitive_branch(...) #2

declare dso_local i32 @array_indexing(...) #2

attributes #0 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind readnone speculatable willreturn }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }

!llvm.dbg.cu = !{!0}
!llvm.module.flags = !{!3, !4, !5}
!llvm.ident = !{!6}

!0 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1, producer: "Ubuntu clang version 10.0.1-++20211003085942+ef32c611aa21-1~exp1~20211003090334.2", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !2, splitDebugInlining: false, nameTableKind: None)
!1 = !DIFile(filename: "dummydrv.ko.c", directory: "/home/yzh89/Documents/pdg/test/SharedDataTests")
!2 = !{}
!3 = !{i32 7, !"Dwarf Version", i32 4}
!4 = !{i32 2, !"Debug Info Version", i32 3}
!5 = !{i32 1, !"wchar_size", i32 4}
!6 = !{!"Ubuntu clang version 10.0.1-++20211003085942+ef32c611aa21-1~exp1~20211003090334.2"}
!7 = distinct !DISubprogram(name: "main", scope: !1, file: !1, line: 4, type: !8, scopeLine: 4, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !2)
!8 = !DISubroutineType(types: !9)
!9 = !{!10}
!10 = !DIBasicType(name: "int", size: 32, encoding: DW_ATE_signed)
!11 = !DILocalVariable(name: "myData", scope: !7, file: !1, line: 6, type: !12)
!12 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "data", file: !13, line: 1, size: 128, elements: !14)
!13 = !DIFile(filename: "./header.h", directory: "/home/yzh89/Documents/pdg/test/SharedDataTests")
!14 = !{!15, !17}
!15 = !DIDerivedType(tag: DW_TAG_member, name: "ptr", scope: !12, file: !13, line: 2, baseType: !16, size: 64)
!16 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10, size: 64)
!17 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !12, file: !13, line: 3, baseType: !10, size: 32, offset: 64)
!18 = !DILocation(line: 6, column: 15, scope: !7)
!19 = !DILocalVariable(name: "x", scope: !7, file: !1, line: 7, type: !10)
!20 = !DILocation(line: 7, column: 7, scope: !7)
!21 = !DILocation(line: 8, column: 10, scope: !7)
!22 = !DILocation(line: 8, column: 14, scope: !7)
!23 = !DILocation(line: 9, column: 3, scope: !7)
!24 = !DILocation(line: 11, column: 10, scope: !7)
!25 = !DILocation(line: 11, column: 15, scope: !7)
!26 = !DILocation(line: 12, column: 3, scope: !7)
!27 = !DILocalVariable(name: "y", scope: !7, file: !1, line: 14, type: !10)
!28 = !DILocation(line: 14, column: 7, scope: !7)
!29 = !DILocation(line: 15, column: 10, scope: !7)
!30 = !DILocation(line: 15, column: 14, scope: !7)
!31 = !DILocation(line: 16, column: 3, scope: !7)
!32 = !DILocation(line: 18, column: 10, scope: !7)
!33 = !DILocation(line: 18, column: 14, scope: !7)
!34 = !DILocation(line: 19, column: 3, scope: !7)
!35 = !DILocation(line: 21, column: 10, scope: !7)
!36 = !DILocation(line: 21, column: 15, scope: !7)
!37 = !DILocation(line: 22, column: 3, scope: !7)
!38 = !DILocalVariable(name: "array", scope: !7, file: !1, line: 24, type: !39)
!39 = !DICompositeType(tag: DW_TAG_array_type, baseType: !10, size: 320, elements: !40)
!40 = !{!41}
!41 = !DISubrange(count: 10)
!42 = !DILocation(line: 24, column: 7, scope: !7)
!43 = !DILocation(line: 25, column: 10, scope: !7)
!44 = !DILocation(line: 25, column: 15, scope: !7)
!45 = !DILocation(line: 26, column: 18, scope: !7)
!46 = !DILocation(line: 26, column: 3, scope: !7)
!47 = !DILocation(line: 28, column: 3, scope: !7)
